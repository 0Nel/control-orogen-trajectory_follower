name "trajectory_controller"
version "0.1"

import_types_from "base"
import_types_from "controldev"

using_library "trajectory_follower"
using_library "base-lib"

import_types_from "TrajectoryFollowerTypes.hpp"

task_context "Task" do
    property("controllerType", "int").
            doc "selects chainedProportionalIntegral controller to be used. Values: 0: No orientation, 1: chainedProportional, 2: chainedProportionalIntegral"

    property("forwardVelocity", "double").
            doc "forward speed of the robot"

    property("forwardLength", "double").
            doc "moving the pose estimation point forward for no orientation controller"

    property("K0_nO", "double").
            doc "K0 gain for no orientation controller"

    property("K2_P", "double").
            doc "K2 gain for P controller"

    property("K3_P", "double").
            doc "K3 gain for P controller"

    property("K0_PI", "double").
            doc "K0 gain for PI controller"

    property("K2_PI", "double").
            doc "K2 gain for PI controller"

    property("K3_PI", "double").
            doc "K3 gain for PI controller"

    input_port("trajectory", "/std/vector</wrappers/Waypoint>").
        doc("Trajectory the robot should follow").
        needs_buffered_connection

    input_port("pose", "wrappers/samples/RigidBodyState").
        doc "Position and orientation of the Robot"

    output_port("motion_command", "controldev/MotionCommand").
        doc "Drive command that should steer the robot to the target Pose"

    output_port("currentCurvePoint", "trajectory_controller/CurvePoint").
    	doc "Corresponding point on the reference curve"
    
    output_port("currentPose", "trajectory_controller/RobotPose").
    	doc "Current pose of the robot"

    output_port("poseError", "trajectory_controller/TrajError").
    	doc "Pose error calculated by NURBSCurve3D"

    needs_configuration
    port_driven
end


